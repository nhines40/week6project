name: CI / CD – Build, Push, Deploy

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write      # needed for OIDC to AWS
      contents: read

    steps:
      # ---- Checkout source ----
      - name: Checkout repository
        uses: actions/checkout@v4

      # ---- Set up Node (for lint / test) ----
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # ---- Authenticate to AWS via OIDC ----
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      # ---- Login to ECR ----
      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      # ---- Build, tag, and push Docker image ----
      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/week6project:$IMAGE_TAG .
          docker push $ECR_REGISTRY/week6project:$IMAGE_TAG

      # ---- Deploy to Elastic Beanstalk (pull the new image) ----
      - name: Deploy to Elastic Beanstalk
        env:
          EB_APP: week6cloudfinal
          EB_ENV: week6cloudfinal-env
          AWS_REGION: ${{ secrets.AWS_REGION }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          pip install awsebcli
          eb init $EB_APP --region $AWS_REGION -p docker
          eb use $EB_ENV
          # Tell EB to use the newly‑pushed tag
          eb setenv IMAGE_TAG=${{ github.sha }}
          eb deploy --quiet
